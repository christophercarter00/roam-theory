(function ($, window, document, undefined) {
    $.fn.extend({
        scrollspy: function (options) {
            var defaults = {
                namespace: "scrollspy",
                activeClass: "active",
                animate: false,
                duration: 1000,
                offset: 0,
                container: window,
                replaceState: false,
                onChange: null,
                onExit: null
            };

            options = $.extend({}, defaults, options);

            var add = function (ex1, ex2) {
                return parseInt(ex1, 10) + parseInt(ex2, 10);
            },
            findElements = function (links) {
                var elements = [];
                links.each(function () {
                    var link = $(this),
                        hash = link.attr("href"),
                        element = $(hash);

                    if (element.length > 0) {
                        var top = Math.floor(element.offset().top),
                            bottom = top + Math.floor(element.outerHeight());
                        elements.push({ element: element, hash: hash, top: top, bottom: bottom });
                    }
                });
                return elements;
            },
            findLink = function (links, hash) {
                return links.filter(function () {
                    return $(this).attr("href") === hash;
                }).first();
            },
            resetClasses = function (links) {
                links.parent().removeClass(options.activeClass);
            };

            return this.each(function () {
                var element = this,
                    container = $(options.container),
                    links = $(element).find("a"),
                    scrollArea = "";

                links.on("click", function (e) {
                    var target = $(this).attr("href"),
                        $target = $(target);

                    if ($target.length > 0) {
                        var top = add($target.offset().top, options.offset);
                        options.animate ? $("html, body").animate({ scrollTop: top }, options.duration) : window.scrollTo(0, top);
                        e.preventDefault();
                    }
                });

                resetClasses(links);
                var elements = findElements(links);

                var trackChanged = function () {
                    var position = { top: add($(this).scrollTop(), Math.abs(options.offset)), left: $(this).scrollLeft() },
                        link;
                    
                    for (var i = 0; i < elements.length; i++) {
                        var current = elements[i];
                        if (position.top >= current.top && position.top < current.bottom) {
                            var hash = current.hash;
                            link = findLink(links, hash);
                            if (link.length) {
                                if (options.onChange && scrollArea !== hash) {
                                    options.onChange(current.element, $(element), position);
                                    scrollArea = hash;
                                }
                                if (options.replaceState) {
                                    history.replaceState({}, "", hash);
                                }
                                resetClasses(links);
                                link.parent().addClass(options.activeClass);
                                break;
                            }
                        }
                    }

                    if (!link && scrollArea !== "exit" && options.onExit) {
                        options.onExit($(element), position);
                        resetClasses(links);
                        scrollArea = "exit";
                        if (options.replaceState) {
                            history.replaceState({}, "", "/");
                        }
                    }
                };

                container.on("scroll." + options.namespace, trackChanged);
                $(document).ready(trackChanged);
            });
        }
    });
})(jQuery, window, document);
